generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model hris_integration {
  id               String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  integration_type String       @db.VarChar(255)
  organization_id  String       @db.Uuid
  created_at       DateTime     @default(now()) @db.Timestamp(6)
  updated_at       DateTime     @default(now()) @db.Timestamp(6)
  organization     organization @relation(fields: [organization_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model onboarding_workflow {
  id              String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name            String         @db.VarChar(255)
  organization_id String         @db.Uuid
  created_at      DateTime       @default(now()) @db.Timestamp(6)
  updated_at      DateTime       @default(now()) @db.Timestamp(6)
  organization    organization   @relation(fields: [organization_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  saas_account    saas_account[]
}

model organization {
  id                  String                @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description         String?               @db.VarChar(255)
  image               String?               @db.VarChar(255)
  name                String                @db.VarChar(255)
  created_at          DateTime              @default(now()) @db.Timestamp(6)
  updated_at          DateTime              @default(now()) @db.Timestamp(6)
  user_id             String                @db.Uuid
  tenant_id           String                @db.VarChar(255)
  hris_integration    hris_integration[]
  onboarding_workflow onboarding_workflow[]
  user                user                  @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model saas_account {
  id                     String              @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name                   String              @db.VarChar(255)
  user_id                String              @db.Uuid
  onboarding_workflow_id String              @db.Uuid
  created_at             DateTime            @default(now()) @db.Timestamp(6)
  updated_at             DateTime            @default(now()) @db.Timestamp(6)
  onboarding_workflow    onboarding_workflow @relation(fields: [onboarding_workflow_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user                   user                @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id           String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email        String         @unique @db.VarChar(255)
  firstName    String?        @db.VarChar(255)
  lastName     String?        @db.VarChar(255)
  roq_user_id  String         @db.VarChar(255)
  tenant_id    String         @db.VarChar(255)
  created_at   DateTime       @default(now()) @db.Timestamp(6)
  updated_at   DateTime       @default(now()) @db.Timestamp(6)
  organization organization[]
  saas_account saas_account[]
}
